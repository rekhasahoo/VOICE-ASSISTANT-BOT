from IPython.display import Javascript, display
from google.colab import output
import base64
import io
from IPython.display import Audio

js = Javascript("""
async function recordAudio() {
  const div = document.createElement('div');
  const audio = document.createElement("audio");
  const startButton = document.createElement("button");
  const stopButton = document.createElement("button");

  startButton.textContent = 'Start Recording';
  stopButton.textContent = 'Stop Recording';

  document.body.appendChild(div);
  div.appendChild(startButton);
  div.appendChild(audio);

  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
  const recorder = new MediaRecorder(stream);
  audio.style.display = 'block';
  audio.srcObject = stream;
  audio.controls = true;
  audio.muted = true;

  await new Promise(resolve => startButton.onclick = resolve);
    startButton.replaceWith(stopButton);
    recorder.start();

  await new Promise(resolve => stopButton.onclick = resolve);
    recorder.stop();
    let recData = await new Promise(resolve => recorder.ondataavailable = resolve);
    let arrBuff = await recData.data.arrayBuffer();
    stream.getAudioTracks()[0].stop();
    div.remove();

    let binaryString = '';
    let bytes = new Uint8Array(arrBuff);
    bytes.forEach(byte => { binaryString += String.fromCharCode(byte) });

  return btoa(binaryString);
}
""")
from google.colab.output import eval_js
import base64
display(js)

print("Click the Start/Stop buttons to record...")
audio_b64 = eval_js("recordAudio({})")
# Decode and save
with open("audio.wav", "wb") as f:
    audio_bytes = base64.b64decode(audio_b64)
    f.write(audio_bytes)

print("ðŸŽ¤ Audio saved as audio.wav")
Audio("audio.wav")



